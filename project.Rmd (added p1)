---
title: "276 Project"
author: "Ron Kinel, Rebecca He, Lingyu Zhou, Wenjing Li, Samran Khan"
date: "5/22/2020"
output: pdf_document
---

```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = TRUE)
```





# Problem 2
```{r}
#n: number of paths
#sigma: volatilty/variance of stock, not sd
#S0: current stock price
#t: terminal time in yearly unit
#np: number of periods
#r: interest rate
#delta: continuous dividend yield of the stock

StockPath <- function(n, sigma, S0, t, np=t, r, delta=0){
  S <- array(0, dim=c(n,np+1))
  S[,1] <- S0
  Z <- matrix( rnorm(n*(np+1)), n, (np+1))
  h <- t/np #h: length of each period = t/np
  
  for(i in 1:n){
    for (j in 1:np) {
      S[i,j+1] <- S[i,j]*exp((r-delta-sigma/2)*h + sqrt(h*sigma)*Z[i,j])
    }
  }
  
  mypath <<- S
  return (mypath)
}

StockPath(20,.04,50,10,5,.04,0)
```


# Problem 3
```{r}
EurOptPrice <- function(n, sigma=histoVol, S0, t, np=t, r, delta=0, k=S0){
  mypath <- StockPath(n, sigma, S0, t, np, r, delta) #updates "mypath" from problem 2 with new values.
  disc_payoff <<- array(0, dim=c(n,1)) #discounted payoff vector
  
  for (i in 1:n){
    disc_payoff[i,1] <<- exp(-r*t)*pmax(k-mypath[i,(np+1)],0)
  }
  
  option_price <- mean(disc_payoff)
  option_var <- sd(disc_payoff)^2
  
  #using bs pricing to compare mc estimate
  d1 = (log(S0/k)+(r+(sigma)/2)*t)/(sqrt(t*sigma))
  d2 = d1-(sqrt(sigma*t))
  Eu_put_bs_price <- (k*exp(-r*t)*pnorm(-d2))-(S0*exp(-delta*t)*pnorm(-d1))
  
  x <- cat("The Monte Carlo price of this option is: ", option_price, ".\nThe variance is: ", option_var, ".\nThe true Black-Scholes price of this option is: ", Eu_put_bs_price, ".\nThe discounted payoff vector is:\n")
  
  return(c(x, disc_payoff))
}

EurOptPrice(20,.04,50,10,5,.04,0,50)
```
